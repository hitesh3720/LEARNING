{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c99985;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww29200\viewh15720\viewkind0
\deftab720
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs32 \cf2 \cb3 #include <stdio.h>\
\
// Define global flags as bit masks\
#define DIRTY   0x01  // Binary: 00001\
#define OPEN    0x02  // Binary: 00010\
#define VERBOSE 0x04  // Binary: 00100\
#define RED     0x08  // Binary: 01000\
#define SEASICK 0x10  // Binary: 10000\
\
// Function to set a flag\
void setFlag(unsigned int *flags, unsigned int flag) \{\
    *flags |= flag;  // Set the flag using OR (|)\
\}\
\
// Function to clear a flag\
void clearFlag(unsigned int *flags, unsigned int flag) \{\
    *flags &= ~flag;  // Clear the flag using AND (&) with NOT (~)\
\}\
\
// Function to toggle a flag\
void toggleFlag(unsigned int *flags, unsigned int flag) \{\
    *flags ^= flag;  // Toggle the flag using XOR (^)\
\}\
\
// Function to check if a flag is set\
int isFlagSet(unsigned int flags, unsigned int flag) \{\
    return (flags & flag) != 0;  // Check if the flag is set using AND (&)\
\}\
\
int main() \{\
    unsigned int flags = 0;  // Start with all flags cleared (binary: 00000)\
\
    // Set DIRTY and RED flags\
    setFlag(&flags, DIRTY);\
    setFlag(&flags, RED);\
    printf("Flags after setting DIRTY and RED: %02X\\n", flags);\
\
    // Toggle VERBOSE flag\
    toggleFlag(&flags, VERBOSE);\
    printf("Flags after toggling VERBOSE: %02X\\n", flags);\
\
    // Clear DIRTY flag\
    clearFlag(&flags, DIRTY);\
    printf("Flags after clearing DIRTY: %02X\\n", flags);\
\
    // Check if SEASICK is set\
    if (isFlagSet(flags, SEASICK)) \{\
        printf("SEASICK is set\\n");\
    \} else \{\
        printf("SEASICK is not set\\n");\
    \}\
\
    // Toggle RED flag\
    toggleFlag(&flags, RED);\
    printf("Flags after toggling RED: %02X\\n", flags);\
\
    return 0;\
\}\
}
